// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Profile {
  id String @id @default(uuid())
  userId String @unique
  name String
  imageUrl String @db.Text
  email String @db.Text

  stores Store[]
}

model Store {
  id String @id @default(uuid())
  name String
  backgroundImageUrl String @default("")
  logoImageUrl String @default("")
  userId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user Profile @relation(fields: [userId], references: [id])
  billBoards BillBoard[]
  sizes Size[]
  colors Color[]
  products Product[]

  @@index([userId], name: "userId")
}

model BillBoard{
  id String @id @default(uuid())
  storeId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  imageUrl String
  name String

  store Store @relation(fields: [storeId], references: [id])
  categories Category[]

  @@index([storeId], name: "storeId")
}

model Category {
  id String @id @default(uuid())
  name String
  billBoardId String
  billBoard BillBoard @relation(fields: [billBoardId], references: [id])
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([billBoardId], name: "billBoardId")
}

model Size {
  id  String @id @default(uuid())
  name String
  value String
  order Int @default(0)
  storeId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Store Store @relation(fields: [storeId], references: [id])
  variants VariantProduct[]

  @@index([storeId], name: "storeId")
}

model Color {
  id String @id @default(uuid())
  name String
  value String
  storeId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Store Store @relation(fields: [storeId], references: [id])
  variants VariantProduct[]

  @@index([storeId], name: "storeId")
}

model Product {
  id String @id @default(uuid())
  name String
  basePrice Float @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  storeId String
  Store Store @relation(fields: [storeId], references: [id])
  categoryId String
  Category Category @relation(fields: [categoryId], references: [id])
  variants VariantProduct[]
  images ImagesProduct[]
  isVariant Boolean @default(false)
  isFeatured Boolean @default(false)


  @@index([storeId], name: "storeId")
  @@index([categoryId], name: "categoryId")

}

model VariantProduct {
  id String @id @default(uuid())
  sizeId String? 
  productId String
  quantity Int
  price Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Size Size? @relation(fields: [sizeId], references: [id])
  Product Product @relation(fields: [productId], references: [id])
  colorId String?
  Color Color? @relation(fields: [colorId], references: [id])

  @@index([sizeId], name: "sizeId")
  @@index([productId], name: "productId")

  @@index([colorId], name: "colorId")
}

model ImagesProduct {
  id String @id @default(uuid())
  imageUrl String
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Product Product @relation(fields: [productId], references: [id])

  
  @@index([productId], name: "productId")
}